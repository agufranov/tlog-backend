// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SURVIVOR
  NIKITA
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  passwordHash String
  authSessions AuthSession[]
  role         Role          @default(SURVIVOR)
  players      RoundPlayer[]
  roundsWon    Round[]

  @@map("users")
}

model Round {
  id       String        @id @default(uuid())
  startAt  DateTime
  endAt    DateTime
  players  RoundPlayer[]
  winnerId Int?
  winner   User?         @relation(fields: [winnerId], references: [id])

  @@map("rounds")
}

model RoundPlayer {
  id      String @unique @default(uuid())
  roundId String
  round   Round  @relation(fields: [roundId], references: [id])
  userId  Int
  user    User   @relation(fields: [userId], references: [id])
  taps    Int    @default(0)
  score   Int    @default(0)

  @@id([roundId, userId])
  @@map("round_players")
}

model AuthSession {
  id     Int    @id @default(autoincrement())
  data   String @unique @default(uuid())
  userId Int
  user   User   @relation(fields: [userId], references: [id])

  @@map("auth_sessions")
}
